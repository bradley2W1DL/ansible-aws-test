---
- hosts: localhost
  vars_files:
    - secrets/development.yml
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws.access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws.secret_key }}"
    AWS_DEFAULT_REGION: "{{ aws.default_region }}"
  connection: local

  tasks:
  - name: check for AWS connection
    shell: aws s3 ls {{ lambda_s3_bucket }}
    register: aws_result
    failed_when: aws_result.rc != 0

  - name: Create an s3 bucket
    s3_bucket:
      name: "{{ lambda_s3_bucket }}"
      state: present
      region: "{{ aws.default_region }}"

#  This step should be unnecessary if the s3_sync works as expected
#  - name: get all filenames from bucket
#    shell: aws s3 ls s3://{{ lambda_s3_bucket }} | grep \.zip$ | awk '{print $4}'
#    register: existingLambdas

  #
  # Would this check prevent s3_sync from wiping the bucket if the bundling fails??
  # assuming that the .tmp_lambda_dir would be destroyed after playbook run
  #
  - name: fetch local zip files
    shell: cd .tmp_lambda_dir; find *.zip | sed 's/\.zip$//1'
    register: zip_files
    failed_when: zip_files.rc == 1

#  - name: upload Lambda modules to s3
#    s3:
#      bucket: "{{ lambda_s3_bucket }}"
#      mode: put
#      object: "{{ item }}.zip"
#      src: "zip/{{ item }}.zip"
#      overwrite: different
#    with_items: "{{ zip_files.stdout_lines }}"

  - name: sync local Lambda modules with s3
    s3_sync:
      bucket: "{{ lambda_s3_bucket }}"
      region: "{{ aws.default_region }}"
      file_root: .tmp_lambda_dir/
      # permission: authenticated-read ## should implement this. Lambda needs to be able to read (some IAM shenanigans would allow this no doubt)
      include: "*.zip"
      file_change_strategy: date_size
      delete: yes
    #when: # bundling succeeds, otherwise this will delete all remote files
