---
#
# Assemble template fragments into single sam_template.yml
#
- name: create tmp_fragments directory
  file:
    path: .tmp_fragments
    state: directory

- name: move template_base into tmp dir
  template:
    src: template_base.yml
    dest: .tmp_fragments/aaaa_template_base.yml # aaaa_ prefix to ensure alphabetic file ordering

- name: move lambdaWatcher function into tmp dir
  template:
    src: lambdaWatcher.yml
    dest: .tmp_fragments/lambdaWatcher.yml
  when:
    - not local_dev
    - lambda_functions is defined

- name: move s3_bucket resource into tmp dir
  template:
    src: s3_bucket.yml
    dest: .tmp_fragments/zzz_s3_bucket.yml

## If there are any lambda_functions passed
- name: evaluate j2 templating
  template:
    src: sam_function.template.yml
    dest: .tmp_fragments/function_{{ item }}.yml
  vars:
    function: "{{ item }}"
  when: item != "lambdaWatcher"
  with_items: "{{ lambda_functions }}"
  when: lambda_functions is defined
##

- name: Assemble fragments into local dev template yaml
  assemble:
    src: .tmp_fragments/
    dest: ./sam_template_local.yml
  when: local_dev

- name: Assemble fragments into template yaml
  assemble:
    src: .tmp_fragments/
    dest: ./sam_template.yml
  when: not local_dev

- name: remove tmp_directory
  file:
    path: .tmp_fragments
    state: absent

